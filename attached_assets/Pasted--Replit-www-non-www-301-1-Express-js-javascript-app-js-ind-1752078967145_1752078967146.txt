# Replit에서 www → non-www 301 리다이렉트 설정

## 1. Express.js 사용하는 경우

```javascript
// app.js 또는 index.js 파일의 맨 위에 추가

const express = require('express');
const app = express();

// 301 리다이렉트 미들웨어 (모든 라우트보다 먼저 실행)
app.use((req, res, next) => {
  // www가 있으면 www 없는 도메인으로 리다이렉트
  if (req.headers.host === 'www.toolhub.tools') {
    return res.redirect(301, `https://toolhub.tools${req.url}`);
  }
  
  // HTTP로 접근하면 HTTPS로 리다이렉트
  if (req.headers['x-forwarded-proto'] !== 'https' && req.headers.host !== 'localhost') {
    return res.redirect(301, `https://${req.headers.host}${req.url}`);
  }
  
  next();
});

// 기존 라우트들은 그대로 유지
app.get('/', (req, res) => {
  // 홈페이지 코드
});

// 서버 시작
app.listen(3000, () => {
  console.log('Server running on port 3000');
});
```

## 2. Next.js 사용하는 경우

```javascript
// next.config.js 파일에 추가

/** @type {import('next').NextConfig} */
const nextConfig = {
  async redirects() {
    return [
      {
        source: '/:path*',
        has: [
          {
            type: 'host',
            value: 'www.toolhub.tools',
          },
        ],
        destination: 'https://toolhub.tools/:path*',
        permanent: true, // 301 리다이렉트
      },
    ];
  },
};

module.exports = nextConfig;
```

## 3. 일반 Node.js HTTP 서버 사용하는 경우

```javascript
// server.js 파일

const http = require('http');
const https = require('https');

const server = http.createServer((req, res) => {
  // www 도메인 체크
  if (req.headers.host === 'www.toolhub.tools') {
    res.writeHead(301, {
      'Location': `https://toolhub.tools${req.url}`
    });
    return res.end();
  }
  
  // 기존 서버 로직
  // ...
});

server.listen(3000);
```

## 4. Nginx 설정 (만약 사용한다면)

```nginx
# replit에서 nginx.conf 파일

server {
    listen 80;
    server_name www.toolhub.tools;
    return 301 https://toolhub.tools$request_uri;
}

server {
    listen 80;
    server_name toolhub.tools;
    # 기존 설정...
}
```

## 5. 테스트 방법

### 터미널에서 테스트:
```bash
# www 도메인 테스트
curl -I https://www.toolhub.tools

# 응답에서 확인해야 할 것:
# HTTP/1.1 301 Moved Permanently
# Location: https://toolhub.tools/
```

### 브라우저 개발자 도구에서 확인:
1. F12 → Network 탭 열기
2. https://www.toolhub.tools 접속
3. 첫 번째 요청에서 "301" 상태 코드 확인
4. Location 헤더에 "https://toolhub.tools" 확인

## 6. 주의사항

```javascript
// ❌ 잘못된 예 - 무한 루프 발생
if (req.headers.host.includes('www')) {
  return res.redirect(301, req.url); // 호스트명 없음
}

// ✅ 올바른 예 - 전체 URL 지정
if (req.headers.host === 'www.toolhub.tools') {
  return res.redirect(301, `https://toolhub.tools${req.url}`);
}
```

## 7. 배포 후 확인 체크리스트

- [ ] https://www.toolhub.tools → https://toolhub.tools 리다이렉트
- [ ] https://www.toolhub.tools/page → https://toolhub.tools/page 리다이렉트  
- [ ] 301 상태 코드 반환 확인
- [ ] Google Search Console에서 크롤링 오류 없음 확인